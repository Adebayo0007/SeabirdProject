// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SeaBirdProject.ApplicationContext;

#nullable disable

namespace SeaBirdProject.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SeaBirdProject.Entities.Admin", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("SeaBirdProject.Entities.Branch", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("BranchAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("BranchName")
                        .HasColumnType("longtext");

                    b.Property<string>("BranchType")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Branches");

                    b.HasData(
                        new
                        {
                            Id = "cc7578e3-52a9-49e9-9788-2da54df19f38",
                            BranchAddress = "All Branches Address",
                            BranchName = "All Branches",
                            BranchType = "All Type"
                        });
                });

            modelBuilder.Entity("SeaBirdProject.Entities.Expenses", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BranchId")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("BranchId")
                        .IsUnique();

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("SeaBirdProject.Entities.Sale", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BranchId")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("BranchId")
                        .IsUnique();

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("SeaBirdProject.Entities.Staff", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AdminId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Staffs");
                });

            modelBuilder.Entity("SeaBirdProject.Entities.SuperAdmin", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("SuperAdmins");

                    b.HasData(
                        new
                        {
                            Id = "37846734-732e-4149-8cec-6f43d1eb3f60",
                            UserId = "37846734-732e-4149-8cec-6f43d1eb3f60"
                        });
                });

            modelBuilder.Entity("SeaBirdProject.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<string>("BranchId")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("Gender")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsRegistered")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("ProfilePicture")
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .HasColumnType("longtext");

                    b.Property<string>("UserName")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("BranchId")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = "37846734-732e-4149-8cec-6f43d1eb3f60",
                            Address = "10,Abayomi street,Ipaja,lagos",
                            BranchId = "cc7578e3-52a9-49e9-9788-2da54df19f38",
                            DateCreated = new DateTime(2023, 6, 23, 23, 48, 32, 648, DateTimeKind.Local).AddTicks(1586),
                            Email = "tijaniadebayoabdllahi@gmail.com",
                            Gender = "Male",
                            IsActive = true,
                            IsRegistered = true,
                            Name = "Adebayo Addullah",
                            Password = "$2b$10$ov4nQeZOzR.ulnmAZgLzX.II2Mqbf3twliHwJUacz/vwXwi3348Ei",
                            PhoneNumber = "08087054632",
                            Role = "SuperAdmin",
                            UserName = "Modrator"
                        });
                });

            modelBuilder.Entity("SeaBirdProject.Entities.Admin", b =>
                {
                    b.HasOne("SeaBirdProject.Entities.User", "User")
                        .WithOne("Admin")
                        .HasForeignKey("SeaBirdProject.Entities.Admin", "UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SeaBirdProject.Entities.Expenses", b =>
                {
                    b.HasOne("SeaBirdProject.Entities.Branch", "Branch")
                        .WithOne("Expenses")
                        .HasForeignKey("SeaBirdProject.Entities.Expenses", "BranchId");

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("SeaBirdProject.Entities.Sale", b =>
                {
                    b.HasOne("SeaBirdProject.Entities.Branch", "Branch")
                        .WithOne("Sale")
                        .HasForeignKey("SeaBirdProject.Entities.Sale", "BranchId");

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("SeaBirdProject.Entities.Staff", b =>
                {
                    b.HasOne("SeaBirdProject.Entities.Admin", "Admin")
                        .WithMany("Staffs")
                        .HasForeignKey("AdminId");

                    b.HasOne("SeaBirdProject.Entities.User", "User")
                        .WithOne("Staff")
                        .HasForeignKey("SeaBirdProject.Entities.Staff", "UserId");

                    b.Navigation("Admin");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SeaBirdProject.Entities.SuperAdmin", b =>
                {
                    b.HasOne("SeaBirdProject.Entities.User", "User")
                        .WithOne("SuperAdmin")
                        .HasForeignKey("SeaBirdProject.Entities.SuperAdmin", "UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SeaBirdProject.Entities.User", b =>
                {
                    b.HasOne("SeaBirdProject.Entities.Branch", "Branch")
                        .WithOne("User")
                        .HasForeignKey("SeaBirdProject.Entities.User", "BranchId");

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("SeaBirdProject.Entities.Admin", b =>
                {
                    b.Navigation("Staffs");
                });

            modelBuilder.Entity("SeaBirdProject.Entities.Branch", b =>
                {
                    b.Navigation("Expenses");

                    b.Navigation("Sale");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SeaBirdProject.Entities.User", b =>
                {
                    b.Navigation("Admin");

                    b.Navigation("Staff");

                    b.Navigation("SuperAdmin");
                });
#pragma warning restore 612, 618
        }
    }
}
